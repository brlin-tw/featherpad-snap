%YAML 1.1
---
# Snapcraft Recipe for FeatherPad
# ------------------------------
# This file is in the YAML data serialization format:
# http://yaml.org
# For the spec. of writing this file refer the following documentation:
# * The snapcraft format
#   https://docs.snapcraft.io/the-snapcraft-format/8337
# * Snap Documentation
#   https://docs.snapcraft.io
# * Topics under the doc category in the Snapcraft Forum
#   https://forum.snapcraft.io/c/doc
# For support refer to the snapcraft section in the Snapcraft Forum:
# https://forum.snapcraft.io/c/snapcraft

# All following comments, including this one, are designed to be stripped
# before contributing the recipe to the upstream
name: featherpad
title: FeatherPad (UNOFFICIAL)
summary: Lightweight Qt5 Plain-Text Editor for Linux
description: |
  FeatherPad (by Pedram Pourang, a.k.a. Tsu Jan <tsujan2000@gmail.com>) is a lightweight Qt5 plain-text editor for Linux. It is independent of any desktop environment and has:

  * Drag-and-drop support, including tab detachment and attachment;
  * X11 virtual desktop awareness (using tabs on current desktop but opening a new window on another);
  * An optionally permanent search-bar with a different search entry for each tab;
  * Instant highlighting of found matches when searching;
  * A docked window for text replacement;
  * Support for showing line numbers and jumping to a specific line;
  * Automatic detection of text encoding as far as possible and optional saving with encoding;
  * Syntax highlighting for common programming languages;
  * Ability to open URLs with appropriate applications;
  * Session management;
  * Side-pane mode;
  * Auto-saving;
  * Spell checking with Hunspell;
  * Printing;
  * Text zooming;
  * Appropriate but non-interrupting prompts;
  * Haiku OS support (by [khallebal at GitHub](https://github.com/khallebal));
  * macOS support (by [Pavel Shlyak](https://github.com/shlyakpavel)); and
  * Other features that can be found in its settings, on its menus or when it is actually used.

  **Snap-specific information**

  This snap is NOT an official distribution of FeatherPad, refer the snap's own issue tracker for support:

      https://github.com/brlin-tw/featherpad-snap/issues

  Please DO NOT file issue on the upstream project's issue tracker, as the upstream isn't responsible of the snap distribution.

# The path of icon to represent the snap, relative to the source tree directory
# Only PNG or SVG image is supported, dimension must be greater than 256x256px
icon: snap/gui/featherpad.svg

# The license of this application, in SPDX format
# NOTE: Currently only supports SPDX 2.1 license expressions, as described in Appendix IV of
# https://spdx.org/spdx-specification-21-web-version
# Supported expressions:
# https://github.com/snapcore/snapd/blob/HEAD/spdx/licenses.go
license: GPL-3.0

# Version string just for humans, typically '1.2+git' or '1.3.2'
# The wrapping single quotes are often required to avoid the version string
# being accidentally interpreted as a YAML non-string(like '1', '1.2').
# http://yaml.org/type
# https://arp242.net/weblog/yaml_probably_not_so_great_after_all.html#surprising-behaviour
# NOTE: This key is mutual exclusive with the `adopt-info` key
#version: Derived from the part specified by the `adopt-info` property

# Extract metadata from the main snap part
# https://forum.snapcraft.io/t/extracting-information-from-sources-in-snapcraft-parts/4642
adopt-info: main

# Snapd feature set and version the snap requires in order to work
# https://forum.snapcraft.io/t/snapcraft-top-level-metadata/8334#heading--assumes
assumes:
  - command-chain

# Base runtime
# The common runtime for the snap to run on, or `bare` for static linked applications
base: core18
# https://docs.snapcraft.io/snapcraft-top-level-metadata/8334#heading--base

# Security confinement
# Use `devmode` to getting started
# Flip to `strict` once you have the right plugs and slots,
# or `classic` once you determine that strict confinement is not currently possible
confinement: strict

# Snap Grade
# Use `devel` to getting started
# Flip to `stable` once you determine that the snap is matured, only `stable` grade
# snaps can be promoted to `candidate` and `stable` channels
grade: stable

# Run `snapcraft help sources` for supported keywords on pulling a part's source ingredients
# Run `snapcraft plugins` for supported build helper plugins
# Run `snapcraft help plugins` for supported keywords on building a part
# For `override-*` scriptlets used to modify behavior of certain part's lifecycle phase, check out:
# https://docs.snapcraft.io/scriptlets/4892
parts:
  # Files to patch the files in the snap
  patching:
    source: snap/local/patching
    plugin: dump
    organize:
      '*': patching/
    prime:
      - -*

  # Launcher programs to fix problems at runtime
  launchers:
    source: snap/local/launchers
    plugin: dump
    organize:
      '*': bin/
    stage:
      - -bin/README.*

  # Check out the tagged release revision if it isn't promoted to the stable channel
  # https://forum.snapcraft.io/t/selective-checkout-check-out-the-tagged-release-revision-if-it-isnt-promoted-to-the-stable-channel/10617
  selective-checkout:
    plugin: nil
    build-packages:
      - git
    stage-snaps:
      - selective-checkout
    prime:
      - -*

  # ubuntu/snapcraft-desktop-helpers: Various launchers for snapcraft wiki parts
  # https://github.com/ubuntu/snapcraft-desktop-helpers
  desktop-qt5:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-depth: 1
    source-subdir: qt
    plugin: make
    make-parameters: ["FLAVOR=qt5"]
    build-packages:
      - dpkg-dev
      - qtbase5-dev
    stage-packages:
      - libxkbcommon0
      - ttf-ubuntu-font-family
      - dmz-cursor-theme
      - light-themes
      - adwaita-icon-theme
      - gnome-themes-standard
      - shared-mime-info
      - libqt5gui5
      - libgdk-pixbuf2.0-0
      - libqt5svg5 # for loading icon themes which are svg
      - try: [appmenu-qt5] # not available on core18
      - locales-all

      # Local additions
      ## (Hopefully) Fix Fcitx integration
      - fcitx-frontend-qt5

      ## For better theming compatibility
      - qt5-gtk-platformtheme

      ## Fix launch failure in Wayland sessions
      - qtwayland5
      - libgtk2.0-0

  qarma:
    source: https://github.com/luebking/qarma.git
    source-commit: 923b25bcfbaf0ee3752d0d284b6d3a40a2ecebc3
    plugin: qmake
    build-packages:
    - g++
    - libqt5x11extras5-dev
    - qtbase5-dev
    stage-packages:
    - libqt5core5a
    - libqt5x11extras5

  # The session-manager-workaround launcher: Silent error messages due to inaccessible paths
  # https://forum.snapcraft.io/t/the-session-manager-workaround-launcher-silent-error-messages-due-to-inaccessible-paths/20252
  session-manager-workaround:
    source: https://github.com/brlin-tw/session-manager-workaround-launch.git
    source-tag: v1.0.0
    plugin: dump
    stage:
      - bin/*

  # https://github.com/tsujan/FeatherPad/blob/master/INSTALL
  main:
    after:
      - patching
      - selective-checkout

    source: https://github.com/tsujan/FeatherPad.git
    source-depth: 75
    override-pull: |
      set -o nounset

      snapcraftctl pull

      "$SNAPCRAFT_STAGE"/scriptlets/selective-checkout \
        --append-packaging-revision \
        --release-tag-prefix=V

    plugin: cmake
    build-packages:
      - g++
      - libhunspell-dev
      - libqt5svg5-dev
      - libqt5x11extras5-dev
      - libx11-dev
      - libxext-dev
      - mesa-common-dev
      - pkg-config
      - qtbase5-dev
      - qttools5-dev
      - qttools5-dev-tools
    stage-packages:
      - libgl1
      - libhunspell-1.6-0
      - libqt5core5a
      - libqt5gui5
      - libqt5network5
      - libqt5printsupport5
      - libqt5svg5
      - libqt5widgets5
      - libqt5x11extras5
      - libx11-6
      - libxext6
    configflags:
      # Fix-up application data locating (i.e. help file)
      # DISABLED: Although DATADIR is defined in the upstream source, it isn't really used
      #- -DDATADIR=/snap/$SNAPCRAFT_PROJECT_NAME/current/share
      - -DCMAKE_INSTALL_PREFIX=/snap/$SNAPCRAFT_PROJECT_NAME/current
    organize:
      snap/$SNAPCRAFT_PROJECT_NAME/current/: /
    override-prime: |
      set \
        -o nounset

      snapcraftctl prime

      "${SNAPCRAFT_STAGE}"/patching/patch-desktop-entries.bash

# Apps that are exposed by the snap package
# If the _app_name_ is identical with the featherpad it can be directly run
# with `featherpad` or `snap run featherpad` commands, otherwise it can only be run
# via `featherpad._app_name_` or `snap run featherpad._app_name_`
apps:
  featherpad:
    # The adapter to set up runtime environment at the launch of the snap
    # NOTE: The `command-chain` property is only supported by the `full` adapter
    adapter: full

    # An *relative path* to an executable file root from the `prime` directory to be executed, and its command-line arguments
    # NOTE: The right angle bracket at the beginning of the value of the `command` keyword starts a YAML folded style block scalar, refer the following spec document for more info: http://yaml.org/spec/1.2/spec.html#id2796251
    command: bin/featherpad

    # The commands that are run, in order, before running the one specified by the `command` key
    command-chain:
      - bin/session-manager-workaround
      - bin/desktop-launch
      - bin/featherpad-launch

    # If the providing part of the app. has a desktop entry, specify its path relative to the `prime` directory.
    # If the packaging target doesn't provide a desktop entry, ignore the `desktop` key and implement a desktop entry in `/snap/gui`
    desktop: share/applications/featherpad.desktop

    environment:
      # gtk-common-themes support
      QT_QPA_PLATFORMTHEME: gtk3

      # Workaround launching in Wayland
      # FIXME: Proper Wayland integration should be used instead
      DISABLE_WAYLAND: 1

# Refer the following documentation for asserting interface plugs and slots in a security confined snap:
# Interface management - doc - snapcraft.io
# https://docs.snapcraft.io/interface-management/6154
# Supported interfaces - doc - snapcraft.io
# https://docs.snapcraft.io/supported-interfaces/7744
# Non-A/C: Non-autoconnect interface
plugs:
  # Common desktop interfaces
  # https://forum.snapcraft.io/t/the-desktop-interfaces/2042
  desktop:
  desktop-legacy:
  unity7:
  wayland:

  # Gtk Common Themes support
  # https://forum.snapcraft.io/t/how-to-use-the-system-gtk-theme-via-the-gtk-common-themes-snap/6235
  gsettings:
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

  # Regular files access
  home:
  removable-media: # Non-A/C

  # Allow the application to use spellchecking dictionaries from the content snaps
  # https://forum.snapcraft.io/t/the-hunspell-dictionaries-content-snaps/7160/4
  hunspell-dictionaries:
    interface: content
    default-provider: hunspell-dictionaries-1-6-1804
    target: $SNAP/usr/share/hunspell

  # Eliminate Qt non-fatal error message
  opengl:

  # Application-specific files access
  # The auto-connection requires store grant
  # https://forum.snapcraft.io/t/the-personal-files-interface/9357
  # https://forum.snapcraft.io/t/the-system-files-interface/9358
  # https://github.com/tsujan/FeatherPad/blob/ac3e5104/featherpad/config.cpp#L89
  # QSettings Class | Qt Core 5.15.1
  # https://doc.qt.io/qt-5/qsettings.html#setPath
  dot-config-featherpad:
    interface: personal-files
    read:
      - $HOME/.config/featherpad/fp.conf
  #config-featherpad:
    #interface: system-files
    #read:
      #- /etc/featherpad

  # Network access
  #network:

slots:
  featherpad:
    interface: dbus
    bus: session
    name: org.featherpad.FeatherPad

layout:
  /usr/share/X11/locale:
    symlink: $SNAP/usr/share/X11/locale
